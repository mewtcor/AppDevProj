<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ImagePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XwAAAABJRU5ErkJggg==
</value>
  </data>
</root>